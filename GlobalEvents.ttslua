local tool = {}
        tool.virtualTokenStack = require("/_libs/virtualTokenStacks/event_virtualTokenStacks")
        tool.TrashCan = require("/_libs/TrashCanUniversal/event_TrashCan")

local MKevent = {}
    MKevent.setDiscardPileButton = require("/MageKnightV3/pugDiscardPiles/event_pugDiscardButton")
    MKevent.MonesteryDrop = require("/MageKnightV3/events/event_onObjectDrop").MonesteryDrop

local globalVar = {}
      globalVar.TrashSetting = require("/MageKnightV3/TrashCan")
      --globalVar.SpecialCaseFunction = require("/MageKnightV3/TrashCan").specialCaseFunc
      globalVar.vStackData = require("/MageKnightV3/GlobalVariables").virtualTokenStackData

function onLoad(save_state)
end

--------------------------------------------------------------------------------
--- onObjectEnter : CONTAINER --------------------------------------------------

function onObjectEnterContainer(bag, obj)
    tool.virtualTokenStack.enterContainer(bag, obj, globalVar.vStackData, 'event_virtualTokenStack', 0.5)
    tool.TrashCan.enterContainer(bag, obj, globalVar.TrashSetting)
    --MKevent.setDiscardPileButton.enterContainer(bag, obj, obj.getTags())
end

function onObjectLeaveContainer(bag, obj)
    tool.virtualTokenStack.exitContainer(bag, obj, globalVar.vStackData, 'event_virtualTokenStack', 'F3')
    --MKevent.setDiscardPileButton.enterContainer(bag, obj, obj.getTags())
end

--[[function onObjectEnterScriptingZone(zone, object)
    if zone.hasTag('MonasteryDiscoverToken') and object.hasTag('MonasteryDiscoverToken') then
        MKevent.MonesteryDiscovered(zone, object)
    end
end]]

function onObjectDrop(colorName, object)
    if object.hasTag('MonasteryDiscoverToken')then
        MKevent.MonesteryDrop(object)
    end
end
