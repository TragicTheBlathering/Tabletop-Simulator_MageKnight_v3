local tool = {}
        tool.scaleBag=require("/_libs/bagTools/scaleBags").fromContents
        tool.setBagTexture=require("/_libs/bagTools/setBagImageFromContents").useMeshDifuse
        tool.ejectInvalidObjs=require("/_libs/bagTools/ejectInvalidObjects").eject

        tool.wait = {}
            tool.wait.dropIntoBox=require("/_libs/waitUtils/waitUtils").dropIntoBox

local globalVar = {}
        globalVar.scaleBag = {}
            globalVar.scaleBag = require("/MageKnightV3/GlobalVariables").scaleBags
            globalVar.emptyStackImage = require("/MageKnightV3/GlobalVariables").emptyStackImages

function onLoad(save_state)
end

--------------------------------------------------------------------------------
--- onObjectEnter : CONTAINER --------------------------------------------------
local runExitBag = true
function processBagScaler(eventType, bag)
    runExitBag = false
    for key, tags in pairs(globalVar.scaleBag) do
        local found = "maptile_DrawBag"
        if key == found then
            if string.lower(eventType) == string.lower('enter') then
                tool.ejectInvalidObjs(bag, tags)
            end
            tool.scaleBag(bag, tags, true, 3.5)
            tool.setBagTexture(bag, globalVar.emptyStackImage[found])
        end
    end
    runExitBag = true
end

function onObjectEnterContainer(bag, obj)
    if bag.hasTag('event_BagScale') then
        --print("ENTER : "..bag.getGUID())
        tool.wait.dropIntoBox("enter", bag, processBagScaler, obj, time)
    end
end
function onObjectLeaveContainer(bag, obj)
    if runExitBag then
        if bag.hasTag('event_BagScale') then
            --print("EXIT : "..bag.getGUID())
            tool.wait.dropIntoBox("exit", bag, processBagScaler, obj, time)
        end
    end
end
