local dprint = require("/_libs/debug/dPrint").dprint
local tool = {}
        tool.virtualTokenStack = require("/_libs/virtualTokenStacks/event_virtualTokenStacks")
        tool.TrashCan = require("/MageKnightV3/TrashBags/trashCan_EventCall")

local MKevent = {}
    --MKevent.setDiscardPileButton = require("/MageKnightV3/pugDiscardPiles/event_pugDiscardButton")
    MKevent.OnDrop_monestery = require("/MageKnightV3/events/event_onObjectDrop_Monastery").dropTest

    --MKevent.DiceInHand = require("/MageKnightV3/events/event_DiceInHand").DiceInHand

    -- Discard Decal on Card
    MKevent.OnDrop_cardDecal = require("/MageKnightV3/events/event_onObjectDrop_CardDecal").changeDiscardDecal
    MKevent.OnFlip_cardDecal = require("/MageKnightV3/events/event_onPlayerAction_CardDecal").setDecal

    MKevent.OnDrop_Mana = require("/MageKnightV3/events/event_OnDrop_Mana").DropMana

    --MKevent.OnSpawn_PlayerCard = require("/MageKnightV3/events/event_SpawnEvents").onPlayerCardSpawn

local globalVar = {}
      --globalVar.UniqueTrash = require("/MageKnightV3/TrashBags/trashCan_UniqueSettings")
      globalVar.vStackData = require("/MageKnightV3/GlobalVariables").virtualTokenStackData

function onLoad(save_state)
end

--------------------------------------------------------------------------------
--- onObjectEnter : CONTAINER --------------------------------------------------

function onObjectEnterContainer(bag, obj)
    tool.virtualTokenStack.enterContainer(bag, obj, globalVar.vStackData, 'event_virtualTokenStack', 0.5)
    tool.TrashCan.enterContainer(bag, obj, 0.8) -- No time == 0.8, if you send number as string, it will wait frames instead.
    --MKevent.setDiscardPileButton.enterContainer(bag, obj, obj.getTags())
end

function onObjectLeaveContainer(bag, obj)
    tool.virtualTokenStack.exitContainer(bag, obj, globalVar.vStackData, 'event_virtualTokenStack', 'F3')
    --MKevent.setDiscardPileButton.enterContainer(bag, obj, obj.getTags())
end

function onObjectDrop(colorName, object)
    if object.hasTag('MonasteryDiscoverToken')then
        MKevent.OnDrop_monestery(object)
    elseif object.type == 'Card' or object.type == 'Deck' then
        MKevent.OnDrop_cardDecal(object)
    elseif object.hasTag('ManaCrystal') or object.hasTag('ManaToken') then
        MKevent.OnDrop_Mana(object)
    end
end

function onObjectSpawn(object)
    if object.type == 'Card' then
        object.setDecals({})
        local tag = spawn_findTrashTags(object)
        object.removeTag(tag.remove)
        object.addTag(tag.player)
    end
end

function spawn_findTrashTags(obj)
    local objTags = obj.getTags()
    local trashIDs = require("/MageKnightV3/GlobalVariables").tags_PlayerCard_TrashIDs
    local z = false

    for k, tag in ipairs(objTags) do
        if string.find(tag, 'hand_Player', 1, true) then
            z = {}
            z.num = tag:match("%d+")
            z.remove = trashIDs.remove
            z.player = trashIDs.player..z.num
        end
    end
    
    return z
end

function onPlayerAction(player, action, targets)
    if action == Player.Action.FlipOver then
        local objsFlipped = onPlayerAction_Filter_PlayerCards(targets) -- {decalTargets=false, objectList={}}
        if objsFlipped.decalTargets.found then
            MKevent.OnFlip_cardDecal(player, action, objsFlipped.decalTargets.objectList)
        end
    end
end

function onPlayerAction_Filter_PlayerCards(targets)
    local z = {
                decalTargets={found=false, objectList={}}
              }
    for k, v in pairs(targets) do
        if v.type == 'Card' or v.type =='Deck' then
            --print(k..' : '..v.getName())
            z.decalTargets.found = true
            table.insert(z.decalTargets.objectList, v)
        end
    end

    return z
end

-- Table Size ------------------------------------------------------------------
function tableSize(t)
    local count = 0
    if t ~= nil then
        for key,value in pairs(t) do count = count + 1 end
    end
    return count
end
