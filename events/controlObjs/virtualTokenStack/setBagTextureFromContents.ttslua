local setBagTextureFromContents = {}
local dprint = require("/_libs/debug/dPrint").dprint
local editBag = {}
local tool = {}
            tool.hex2Col=require("/_libs/colourUtils/colourUtils").hexToRgb
            tool.tablesize=require("/_libs/tableUtils/tableUtils").tableSize
            tool.commonTag=require("/_libs/tagUtils/tagUtils").returnTagsfoundinTagList
            tool.foundTag=require("/_libs/tagUtils/tagUtils").tagIsFoundOnAllObjectsInBag
            tool.tablesize=require("/_libs/tableUtils/tableUtils").tableSize

            tool.buildVariable=require("MageKnightV3/events/controlObjs/virtualTokenStack/phraseVariable").buildVariables

local errorTint = {0.9607843, 0.2235294, 0.2235294} -- '#F53939'

function setBagTextureFromContents.usingTint(bag, bagData, value)
    local contentCount = tool.tablesize(bagData.ContainedObjects)
    if contentCount > 0 then
        bag.setColorTint('White')
    else
        bag.setColorTint(hexToRGB(value.empty))
    end
end

function setBagTextureFromContents.usingHardCodedImages(bag, bagData, value)
    --dprint('usingHarcCodedURLs(bag, bagData, value)')
    --dprint('bag', bag)
    --dprint('bagData', bagData)
    --dprint('value', value)
    local contentCount = tool.tablesize(bagData.ContainedObjects)
    local bagTags = bag.getTags()
    if contentCount > 0 then
        local topOBJ = bagData.ContainedObjects[contentCount]
        local newImage = nil

        for k, v in pairs(topOBJ.Tags) do
            for q,w in pairs(value.tags) do
                if string.lower(v) == string.lower(q) then
                    newImage = w
                end
            end
        end

        bag.setCustomObject({diffuse=newImage})
        Wait.frames(function() bag.reload() end, 1)

    else
        local newImage = value.tags[value.tagID[1]]
        if string.find(string.lower(value.empty), string.lower('http'), 1, true) then
            newImage = value.empty
        else
            bag.setColorTint(hexToRGB(value.empty))
        end
        --
        bag.setCustomObject({diffuse=newImage})

        Wait.frames(function() bag.reload() end, 1)
    end
end

function setBagTextureFromContents.usingContentsOfBag(bag, bagData, value)
    --dprint('setBagTextureFromContents.usingContentsOfBag(bag, bagData, value)')
    local contentCount = tool.tablesize(bagData.ContainedObjects)
    local bagTags = bag.getTags()

    if contentCount > 0 then
        local topOBJ = bagData.ContainedObjects[contentCount]
        local newImage = nil

        if topOBJ.Name == "Custom_Tile" then
            newImage = topOBJ.CustomImage.ImageURL
        elseif topOBJ.Name == "Custom_Model" then
            newImage = topOBJ.CustomMesh.DiffuseURL
        end

        bag.setCustomObject({diffuse=newImage})
        bag.setColorTint('White')

        Wait.frames(function() bag.reload() end, 1)
    else
        local newImage = value.tags[value.tagID[1]]
        if string.find(string.lower(value.empty), string.lower('http'), 1, true) then
            newImage = value.empty
        else
            bag.setColorTint(hexToRGB(value.empty))
        end
        --
        bag.setCustomObject({diffuse=newImage})

        Wait.frames(function() bag.reload() end, 1)
    end
end

function setBagTextureFromContents.usingURLs(bag, bagData, value)
    --dprint('setBagTextureFromContents.usingURLs(bag, bagData, value)')
    --dprint('setBagTextureFromContents.usingURLs(bag, bagData, value)')
    --dprint(value.tags)
    local contentCount = tool.tablesize(bagData.ContainedObjects)
    local bagTags = bag.getTags()

    if contentCount > 0 then
        local topOBJ = bagData.ContainedObjects[contentCount]
        local newImage = nil

        if topOBJ.Name == "Custom_Tile" then
            newImage = topOBJ.CustomImage.ImageURL
        elseif topOBJ.Name == "Custom_Model" then
            newImage = topOBJ.CustomMesh.DiffuseURL
        end

        bag.setCustomObject({diffuse=newImage})
        bag.setColorTint('White')

        Wait.frames(function() bag.reload() end, 1)
    else
        local newImage = value.tags[value.tagID[1]]
        if string.find(string.lower(value.empty), string.lower('http'), 1, true) then
            newImage = value.empty
        else
            bag.setColorTint(hexToRGB(value.empty))
        end
        --
        bag.setCustomObject({diffuse=newImage})

        Wait.frames(function() bag.reload() end, 1)
    end

end


function hexToRGB(hex)
    hex = hex:gsub("#", "")  -- Remove the hash character if present

    local r = tonumber(hex:sub(1, 2), 16) / 255
    local g = tonumber(hex:sub(3, 4), 16) / 255
    local b = tonumber(hex:sub(5, 6), 16) / 255

    return {r, g, b}
end

return setBagTextureFromContents
