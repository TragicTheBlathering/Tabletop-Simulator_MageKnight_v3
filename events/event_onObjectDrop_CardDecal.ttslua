local CardDrop = {}
    function CardDrop.changeDiscardDecal(obj)
    --print('DROP CARD OR DECK')
        local testLines = require("/MageKnightV3/GlobalVariables").Decal_testDropPositions
        local face = {up=Vector(0,0,180), down=Vector(0,0,0)}
        --print(logString(testLines, '\n--- testLines'))
        --print(logString(decal, '\n--- decal'))
        local pos = obj.getPosition()
        local rot = obj.getRotation()
        if isPositionBetween(pos, testLines) then
            local rot = Vector(0,0,obj.getRotation().z)
            if rot:equals(face.up) then
                print('DROP : INSIDE - ADD')
                setDecals_Drop(obj,'add')
            elseif rot:equals(face.down) then
                print('DROP : INSIDE - REMOVE')
                setDecals_Drop(obj,'remove')
            end
        else
            print('DROP : OUTSIDE')
            setDecals_Drop(obj,'remove')
        end
    end

    function setDecals_Drop(obj,switch)
        if obj.type == 'Deck' then obj.hide_when_face_down = false end
        local decal = require("/MageKnightV3/GlobalVariables").ThrowAwayDecals
        if switch == 'remove' then
            if obj.getDecals() then
                obj.setDecals({})
                obj.setMemo('decal')
            end
        elseif switch == 'add' then
            if not obj.getDecals() then
                obj.setDecals({decal})
                obj.setMemo('')
            end
        end
    end

--[[

]]
    -- Table Size ------------------------------------------------------------------
    function tableSize(t)
        local count = 0
        if t ~= nil then
            for key,value in pairs(t) do count = count + 1 end
        end
        return count
    end

    function isPositionBetween(pos, testLines)
        local allFalse = false
        if pos.z < testLines.height.h1 and pos.z > testLines.height.h2 then
            for _, points in pairs(testLines) do
                if points and type(points) == "table" then
                    if points.p1 and points.p2 then
                        allFalse = true
                        if (pos.x > points.p1 and pos.x < points.p2) or
                        (pos.x > points.p2 and pos.x < points.p1) then
                            return false
                        end
                    end
                end
            end
        else
            return false
        end
        return allFalse
    end

return CardDrop
--[[
    function CardDrop.changeDiscardDecal(obj)
        --print('Drop Deck or Card')
        local testLines = require("/MageKnightV3/GlobalVariables").Decal_DropPositions
        local decal = require("/MageKnightV3/GlobalVariables").ThrowAwayDecals
            local pos = obj.getPosition()
            local rot = obj.getRotation()
            if isPositionBetween(pos, testLines) then
                --print('DROP : INSIDE')
                setDiscardDecal(obj, rot, decal)
            else
                --print('DROP : OUTSIDE')
                obj.setDecals({})
                obj.memo = setDiscardFlag(obj)
            end
    end

    function setDiscardDecal(obj, rot, decal)
        local faceDown = false
        if rot.z < 350 and rot.z > 5 then
            faceDown = true
        end

        if faceDown then
            obj.setDecals({decal})
            obj.memo = setDiscardFlag(obj, true) -- true means "Add" memo, flase means clear memo
        else
            obj.setDecals({})
            obj.memo = setDiscardFlag(obj)
        end

    end

    function isPositionBetween(pos, testLines)
        local allFalse = false
        if pos.z < testLines.height.h1 and pos.z > testLines.height.h2 then
            for _, points in pairs(testLines) do
                if points and type(points) == "table" then
                    if points.p1 and points.p2 then
                        allFalse = true
                        if (pos.x > points.p1 and pos.x < points.p2) or
                        (pos.x > points.p2 and pos.x < points.p1) then
                            return false
                        end
                    end
                end
            end
        else
            return false
        end
        return allFalse
    end

    function setDiscardFlag(card, add)
        if add then
            if card.hasTag('Cards_Wound') then
                return 'trash_forceDelete'
            elseif card.hasTag('Cards_DeedDeckCard') then
                return 'trash_removedFromGame'
            else
                return ''
            end
        else
            return ''
        end
    end
]]


--[[
local playerArea_cutOffPoint = -56.29
local playerHandZone_cutOffPoint = -85.85
local pos = card.getPosition()
local rot = card.getRotation()
local decals = card.getDecals()

local testLine = { -- mat1-4 (player board 1 - 4)
    m1=false, m3=false, m4=false,
    m2={p1=-59.21, p2=-42.22}
}

local decal = {
    name = 'decal_DelMe',
    url = 'https://steamusercontent-a.akamaihd.net/ugc/2389809851029247051/A8A53C0304AD49E7730D881B6ABA6FC0BA7D9F5A/',
    position=Vector(0.5614782, -0.363152, -0.9249038),
    rotation=Vector(270, 0, 0),
    scale=Vector(0.7646711, 0.952381, 30.76923),
    }

if pos.z > playerArea_cutOffPoint then
    if tableSize(decals) > 0 then
        card.setDecals({})
        card.memo = ''
        --print('Drop 01 : '..card.memo)
    end
else
    for k, v in pairs(testLine) do
        if v then
            if isBetween(v.p1, v.p2, pos.x) then ---85.85
                local decals = card.getDecals()
                if tableSize(decals) > 0 then
                    card.setDecals({})
                    card.memo = ''
                    --print('Drop 02 : '..card.memo)
                end
            elseif v.p2 < pos.x and pos.z > playerHandZone_cutOffPoint then
                if rot.z > 10 then
                    local decals = card.getDecals()
                    if tableSize(decals) == 0 then
                        --print('-----------------------------------------------------------------------')
                        card.setDecals({decal})
                        --print(setMemo(card))
                        card.memo = setMemo(card) --'???? WTF ????'--setMemo(card)
                        --print('Drop Set : '..card.memo)
                    end
                end
            else
                local decals = card.getDecals()
                if tableSize(decals) > 0 then
                    card.setDecals({})
                    card.memo = ''
                    --print('Drop 03   : '..card.memo)
                end
            end
        end
    end
end
--print('set as : '..tostring(card.memo))
]]
