local event_pugDiscardButton = {}
    local tool = {}
          tool.wait = {}
          tool.wait.drop=require("/_libs/waitUtils/waitUtils").dropIntoBox
          tool.objHasAllTags = require("/_libs/tagUtils/tagUtils").allTagsInListFoundinTagList

    function event_pugDiscardButton.enterContainer(bag, obj, objTags)
        if tool.objHasAllTags(bag.getTags(), {returnTag(objTags), 'eventID_monsterDiscardPile', 'trash_DiscardTarget'}) then
            --tool.wait.drop('event_pugDiscardButton', bag, obj, wait_setButton, 'F5')
        end
    end

    function event_pugDiscardButton.exitContainer(bag, obj, variableData, idTag, time)
        if tool.objHasAllTags(bag.getTags(), {returnTag(objTags), 'eventID_monsterDiscardPile', 'trash_DiscardTarget'}) then
            --tool.wait.drop('event_pugDiscardButton', bag, obj, wait_setButton, 'f5')
        end
    end

    function wait_setButton(args)
        --print(logString(args))
        --local bag = getObjectFromGUID(args.bag.getGUID())
        local buttonsObj = getObjectsWithTag('buttons_DiscardBags')[1]
        print(buttonsObj.getName())
        --buttonsObj.call('rebuildButtons', args)
    end

    function returnTag(objTags)
        for k,line in pairs(objTags) do
            if string.find(string.lower(line), 'pug_', 1, true) then
                return line
            end
        end
    end

return event_pugDiscardButton
